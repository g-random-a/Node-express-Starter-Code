stages:
  - build
  - deploy

variables:
  ECR_REGISTRY: 923083696216.dkr.ecr.us-east-1.amazonaws.com
  APP_NAME: question-response-service
  DOCKER_IMAGE: ${ECR_REGISTRY}/${APP_NAME}
  DOCKER_TAG: ${CI_PIPELINE_IID}
  SSH_USER: ${SSH_USER}
  SSH_HOST: ${EC2_HOST}
  MONGO_DB_URI: ${MONGO_DB_URI}
  PORT: ${PORT}

default:
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

build-on-ecr:
  stage: build
  image: 
    name: docker:latest
  services:
    - name: docker:dind
      command: ["--tls=false"]  # Ensure the daemon does not require TLS
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""  # Disable TLS to avoid unnecessary certificate issues
  before_script:
    - apk add --no-cache python3 py3-pip
    # Create and activate a virtual environment
    - python3 -m venv /tmp/venv
    - . /tmp/venv/bin/activate
    # Upgrade pip and install AWS CLI
    - pip install --upgrade pip
    - pip install awscli
    # Log in to AWS ECR
    - /tmp/venv/bin/aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
    # Check versions
    - /tmp/venv/bin/aws --version
    - docker info
    - docker --version
  script:
    # Build and push Docker image
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  tags:
    - kifiya_docker_runner01
  rules:
    - if: '$CI_COMMIT_BRANCH == "new-setup"'


deploy-to-ec2:
  stage: deploy
  image:
    name: alpine
  script:
    - ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} "
      docker rm -f question-response-service || true && 
      aws ecr get-login-password | docker login --username AWS --password-stdin ${ECR_REGISTRY} &&
      docker pull ${DOCKER_IMAGE}:${DOCKER_TAG} && 
      docker run -d -p 5005:${PORT} --name question-response-service -e PORT=${PORT} -e MONGO_DB_URI='${MONGO_DB_URI}' ${DOCKER_IMAGE}:${DOCKER_TAG}"
  tags:
    - kifiya_docker_runner01
  rules:
    - if: '$CI_COMMIT_BRANCH == "new-setup"'
